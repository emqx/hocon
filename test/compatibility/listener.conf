listener.tcp = {
  external = {
    endpoint = "0.0.0.0:1883"
    acceptors = 8
    max_connections = 1024000
    max_conn_rate = 1000
    active_n = 100
    zone = external
    access.1 = "allow all"
    proxy_protocol = on
    proxy_protocol_timeout = 3s
    peer_cert_as_username = cn
    peer_cert_as_clientid = cn
    backlog = 1024
    send_timeout = 15s
    send_timeout_close = on
    recbuf = 2KB
    sndbuf = 2KB
    buffer = 2KB
    tune_buffer = off
    high_watermark = 1MB
    nodelay = true
    reuseaddr = true
  }

  internal = {
    endpoint = "127.0.0.1:11883"
    acceptors = 4
    max_connections = 1024000
    max_conn_rate = 1000
    active_n = 1000
    zone = internal
    backlog = 512
    send_timeout = 5s
    send_timeout_close = on
    recbuf = 64KB
    sndbuf = 64KB
    buffer = 16KB
    tune_buffer = off
    nodelay = false
    reuseaddr = true
  }
}

listener.ssl.external = {
  endpoint = 8883
  acceptors = 16
  max_connections = 102400
  max_conn_rate = 500
  active_n = 100
  zone = external
  access.1 = "allow all"
  proxy_protocol = on
  proxy_protocol_timeout = 3s
  tls_versions = "tlsv1.3,tlsv1.2,tlsv1.1,tlsv1"
  handshake_timeout = 15s
  key_password = yourpass
  keyfile = "{{ platform_etc_dir }}/certs/key.pem"
  certfile = "{{ platform_etc_dir }}/certs/cert.pem"
  cacertfile = "{{ platform_etc_dir }}/certs/cacert.pem"
  dhfile = "{{ platform_etc_dir }}/certs/dh-params.pem"
  verify = verify_peer
  fail_if_no_peer_cert = true
  ciphers = "TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256,TLS_CHACHA20_POLY1305_SHA256,TLS_AES_128_CCM_SHA256,TLS_AES_128_CCM_8_SHA256,ECDHE-ECDSA-AES256-GCM-SHA384,ECDHE-RSA-AES256-GCM-SHA384,ECDHE-ECDSA-AES256-SHA384,ECDHE-RSA-AES256-SHA384,ECDHE-ECDSA-DES-CBC3-SHA,ECDH-ECDSA-AES256-GCM-SHA384,ECDH-RSA-AES256-GCM-SHA384,ECDH-ECDSA-AES256-SHA384,ECDH-RSA-AES256-SHA384,DHE-DSS-AES256-GCM-SHA384,DHE-DSS-AES256-SHA256,AES256-GCM-SHA384,AES256-SHA256,ECDHE-ECDSA-AES128-GCM-SHA256,ECDHE-RSA-AES128-GCM-SHA256,ECDHE-ECDSA-AES128-SHA256,ECDHE-RSA-AES128-SHA256,ECDH-ECDSA-AES128-GCM-SHA256,ECDH-RSA-AES128-GCM-SHA256,ECDH-ECDSA-AES128-SHA256,ECDH-RSA-AES128-SHA256,DHE-DSS-AES128-GCM-SHA256,DHE-DSS-AES128-SHA256,AES128-GCM-SHA256,AES128-SHA256,ECDHE-ECDSA-AES256-SHA,ECDHE-RSA-AES256-SHA,DHE-DSS-AES256-SHA,ECDH-ECDSA-AES256-SHA,ECDH-RSA-AES256-SHA,AES256-SHA,ECDHE-ECDSA-AES128-SHA,ECDHE-RSA-AES128-SHA,DHE-DSS-AES128-SHA,ECDH-ECDSA-AES128-SHA,ECDH-RSA-AES128-SHA,AES128-SHA"
  secure_renegotiate = off
  reuse_sessions = on
  honor_cipher_order = on
  peer_cert_as_username = cn
  peer_cert_as_clientid = cn
  backlog = 1024
  send_timeout = 15s
  send_timeout_close = on
  recbuf = 4KB
  sndbuf = 4KB
  buffer = 4KB
  tune_buffer = off
  nodelay = true
  reuseaddr = true
}

listener.ws.external = {
  endpoint = 8083
  mqtt_path = "/mqtt"
  acceptors = 4
  max_connections = 102400
  max_conn_rate = 1000
  active_n = 100
  zone = external
  access.1 = "allow all"
  fail_if_no_subprotocol = true
  supported_subprotocols = "mqtt, mqtt-v3, mqtt-v3.1.1, mqtt-v5"
  proxy_address_header = X-Forwarded-For
  proxy_port_header = X-Forwarded-Port
  proxy_protocol = on
  proxy_protocol_timeout = 3s
  peer_cert_as_username = cn
  peer_cert_as_clientid = cn
  backlog = 1024
  send_timeout = 15s
  send_timeout_close = on
  recbuf = 2KB
  sndbuf = 2KB
  buffer = 2KB
  tune_buffer = off
  nodelay = true
  compress = true
  deflate_opts.level = default
  deflate_opts.mem_level = 8
  deflate_opts.strategy = default
  deflate_opts.server_context_takeover = takeover
  deflate_opts.client_context_takeover = takeover
  deflate_opts.server_max_window_bits = 15
  deflate_opts.client_max_window_bits = 15
  idle_timeout = 60s
  max_frame_size = 0
  mqtt_piggyback = multiple
  check_origin_enable = false
  allow_origin_absence = true
  check_origins = "http://localhost:18083, http://127.0.0.1:18083"
}

listener.wss.external = {
  endpoint = 8084
  mqtt_path = "/mqtt"
  acceptors = 4
  max_connections = 16
  max_conn_rate = 1000
  active_n = 100
  zone = external
  access.1 = "allow all"
  fail_if_no_subprotocol = true
  supported_subprotocols = "mqtt, mqtt-v3, mqtt-v3.1.1, mqtt-v5"
  proxy_address_header = X-Forwarded-For
  proxy_port_header = X-Forwarded-Port
  proxy_protocol = on
  proxy_protocol_timeout = 3s
  tls_versions = "tlsv1.3,tlsv1.2,tlsv1.1,tlsv1"
  keyfile = "{{ platform_etc_dir }}/certs/key.pem"
  certfile = "{{ platform_etc_dir }}/certs/cert.pem"
  cacertfile = "{{ platform_etc_dir }}/certs/cacert.pem"
  depth = 10
  key_password = yourpass
  verify = verify_peer
  fail_if_no_peer_cert = true
  ciphers = "TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256,TLS_CHACHA20_POLY1305_SHA256,TLS_AES_128_CCM_SHA256,TLS_AES_128_CCM_8_SHA256,ECDHE-ECDSA-AES256-GCM-SHA384,ECDHE-RSA-AES256-GCM-SHA384,ECDHE-ECDSA-AES256-SHA384,ECDHE-RSA-AES256-SHA384,ECDHE-ECDSA-DES-CBC3-SHA,ECDH-ECDSA-AES256-GCM-SHA384,ECDH-RSA-AES256-GCM-SHA384,ECDH-ECDSA-AES256-SHA384,ECDH-RSA-AES256-SHA384,DHE-DSS-AES256-GCM-SHA384,DHE-DSS-AES256-SHA256,AES256-GCM-SHA384,AES256-SHA256,ECDHE-ECDSA-AES128-GCM-SHA256,ECDHE-RSA-AES128-GCM-SHA256,ECDHE-ECDSA-AES128-SHA256,ECDHE-RSA-AES128-SHA256,ECDH-ECDSA-AES128-GCM-SHA256,ECDH-RSA-AES128-GCM-SHA256,ECDH-ECDSA-AES128-SHA256,ECDH-RSA-AES128-SHA256,DHE-DSS-AES128-GCM-SHA256,DHE-DSS-AES128-SHA256,AES128-GCM-SHA256,AES128-SHA256,ECDHE-ECDSA-AES256-SHA,ECDHE-RSA-AES256-SHA,DHE-DSS-AES256-SHA,ECDH-ECDSA-AES256-SHA,ECDH-RSA-AES256-SHA,AES256-SHA,ECDHE-ECDSA-AES128-SHA,ECDHE-RSA-AES128-SHA,DHE-DSS-AES128-SHA,ECDH-ECDSA-AES128-SHA,ECDH-RSA-AES128-SHA,AES128-SHA"
  secure_renegotiate = off
  reuse_sessions = on
  honor_cipher_order = on
  peer_cert_as_username = cn
  peer_cert_as_clientid = cn
  backlog = 1024
  send_timeout = 15s
  send_timeout_close = on
  recbuf = 4KB
  sndbuf = 4KB
  buffer = 4KB
  nodelay = true
  compress = true
  deflate_opts.level = default
  deflate_opts.mem_level = 8
  deflate_opts.strategy = default
  deflate_opts.server_context_takeover = takeover
  deflate_opts.client_context_takeover = takeover
  deflate_opts.server_max_window_bits = 15
  deflate_opts.client_max_window_bits = 15
  idle_timeout = 60s
  max_frame_size = 0
  mqtt_piggyback = multiple
  check_origin_enable = false
  allow_origin_absence = true
  check_origins = "https://localhost:8084, https://127.0.0.1:8084"
}
